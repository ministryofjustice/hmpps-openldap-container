name: "Reusable: Build push an image"

on:
  workflow_dispatch:
    inputs:
      rbac_tag:
        type: string
  workflow_call:
    inputs:
      rbac_tag:
        type: string

jobs:
  build_image:
    name: Build Image
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image and export
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          tags: delius-core-openldap-ecr-repo:${{ github.run_id }}-${{ github.run_attempt }}
          build-args: |
            RBAC_TAG=${{ inputs.rbac_tag }}
          outputs: type=docker,dest=/tmp/openldap-image-${{ inputs.rbac_tag }}.tar
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openldap-image-${{ inputs.rbac_tag }}
          path: /tmp/openldap-image-${{ inputs.rbac_tag }}.tar
          retention-days: 1

  push_image:
    name: Publish Image
    needs: [build_image]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: openldap-image-${{ inputs.rbac_tag }}
          path: /tmp
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-openldap-container-${{ github.run_id }}-${{ github.run_attempt }}"
          aws-region: ${{ vars.AWS_REGION }}
      - name: Load image from artifact
        run: docker load --input /tmp/openldap-image-${{ inputs.rbac_tag }}.tar
      - name: Tag image with latest
        if: (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) || github.event.ref == 'refs/heads/main'
        run: |
          docker tag delius-core-openldap-ecr-repo:${{ github.run_id }}-${{ github.run_attempt }} ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/delius-core-openldap-ecr-repo:${{ inputs.rbac_tag }}-latest
      - name: Tag image with github run id and attempt
        run: |
          docker tag delius-core-openldap-ecr-repo:${{ github.run_id }}-${{ github.run_attempt }} ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/delius-core-openldap-ecr-repo:${{ inputs.rbac_tag }}-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
      - name: Push images to ECR
        run: docker push --all-tags ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/delius-core-openldap-ecr-repo
      - name: Output image tags created (run id)
        run: echo "${{ inputs.rbac_tag }}-${{ github.run_id }}-${{ github.run_attempt }}"
      - name: Output image tags created (latest)
        if: (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) || github.event.ref == 'refs/heads/main'
        run: echo "${{ inputs.rbac_tag }}-latest"
