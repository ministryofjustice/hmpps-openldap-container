name: Modernisation Platform Image Build and Push

on:
  workflow_dispatch:
    inputs:
      RBAC_TAG:
        description: 'RBAC Tag'
        required: true
      env:
        description: 'Environment'
        required: true
        type: choice
        options:
          - dev
          - test

jobs:
  build-image:
    name: Build Image
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-openldap-container-${{ github.run_number }}"
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image and export
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          tags: delius-core-openldap-ecr-repo:${{ github.sha }}
          build-args: |
            RBAC_TAG=${{ github.event.inputs.RBAC_TAG }}
          outputs: type=docker,dest=/tmp/openldap.tar
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openldap-image
          path: /tmp/openldap.tar
          retention-days: 1

  # scan-image:
  #   name: Scan Image
  #   needs: build-image
  #   permissions:
  #     # required for all workflows
  #     security-events: write
  #     # only required for workflows in private repositories
  #     actions: read
  #     contents: read
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: openldap-image
  #         path: /tmp

  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/openldap.tar

  #     - name: Trivy scan
  #       uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
  #       with:
  #         format: 'sarif'
  #         severity: 'MEDIUM,HIGH,CRITICAL'
  #         image-ref: 'delius-core-openldap-ecr-repo:${{ github.sha }}'
  #         exit-code: '1'
  #         output: 'trivy-results.sarif'
  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v2
  #       if: failure() # If Trivy found vulnerabilities
  #       with:
  #         sarif_file: 'trivy-results.sarif'
  
  publish-image:
    name: Publish image
    needs: [build-image]
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump-version.outputs.new_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: bump-version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: minor # Making this default visible
          TAG_CONTEXT: repo # Making this default visible
          PRERELEASE: ${{ github.base_ref != 'refs/heads/main' }}
          PRERELEASE_SUFFIX: ${{ github.base_ref }} # Branch name
      
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: openldap-image
          path: /tmp

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-openldap-container-${{ github.run_number }}"
          aws-region: ${{ vars.AWS_REGION }}

      - name: Load and retag image for publish
        run: |
          docker load --input /tmp/openldap.tar
          docker tag \
            delius-core-openldap-ecr-repo:${{ github.sha }} \
            ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/delius-core-openldap-ecr-repo:$(echo ${{ steps.bump-version.outputs.new_tag }} | sed 's/[^a-zA-Z0-9.]/-/g')

      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

      - name: Publish image
        run: docker push ${{ vars.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/delius-core-openldap-ecr-repo:$(echo ${{ steps.bump-version.outputs.new_tag }} | sed 's/[^a-zA-Z0-9.]/-/g')

  deploy-image:
    uses: ./.github/workflows/modernisation-platform-image-deploy.yml
    needs: [build-image, "publish-image"]
    with:
      environment: delius-core-${{ github.event.inputs.env }}
      image_tag: ${{ needs.publish-image.outputs.new_tag }}
    secrets: inherit

  # example of another environment
  # deploy-image-delius-core-mis-dev:
  #   if: github.ref == 'refs/heads/main'
  #   needs: [build-image, scan-image, "publish-image"]
  #   uses: ./.github/workflows/modernisation-platform-image-deploy.yml
  #   with:
  #     environment: delius-core-mis-dev
  #     image_tag: ${{ needs.publish-image.outputs.new_tag }}
  #   secrets: inherit
